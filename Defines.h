#ifndef __Defines__  
#define __Defines__ 

#include <string.h>

namespace ACreativeTracker
{
	// Magic Numbers Holders
	const char MAXIMUM_TIMES_HINTABLE = 10;
	const char MAXIMUM_HINTS_EXPECTED = 32;
	const char PROGRESSIVE_STRING_RACE = 11;

	// Necessary Enums
	enum ItemsID
	{
		NA,
		Consumables,
		Deku_Stick, Deku_Sticks = Deku_Stick,
		Deku_Nut, Deku_Nuts = Deku_Nut,
		Deku_Seed, Deku_Seeds = Deku_Seed,
		Arrow, Arrows = Arrow,
		Bomb, Bombs = Bomb,
		Bombchu, Bombchus = Bombchu,
		Magic_Beans, Magic_Beans_Pack = Magic_Beans,
		Rupees,

		Progressives,
		Hookshot, HS = Hookshot,
		Strength, Str = Strength,
		Wallet,
		Slingshot,
		Bow,
		Scale,
		Magic_Meter, Magic = Magic_Meter,
		Bomb_Bag,
		Deku_Nut_Capacity,
		Deku_Stick_Capacity,
		Ocarina,

		Equipment,
		Kokiri_Sword,
		Master_Sword,
		Biggoron_Sword,
		Giants_Knife,
		Deku_Shield,
		Hylian_Shield,
		Mirror_Shield,
		Kokiri_Tunic,
		Goron_Tunic, Fire_Tunic = Goron_Tunic,
		Zora_Tunic, Water_Tunic = Zora_Tunic,
		Kokiri_Boots, Kokiri_Boot = Kokiri_Boots,
		Iron_Boots, Iron_Boot = Iron_Boots, Irons = Iron_Boots,
		Hover_Boots, Hover_Boot = Hover_Boots, Hovers = Hover_Boots,
		Boomerang,
		Hammer, Megaton_Hammer = Hammer,
		Double_Defense, DD = Double_Defense, DDs = Double_Defense,
		Stone_Of_Agony, SoA = Stone_Of_Agony,

		Magic_Items,
		Lens_Of_Truth, Lens = Lens_Of_Truth, Len_Of_Truth = Lens_Of_Truth,
		Fire_Arrow, Fire_Arrows = Fire_Arrow,
		Ice_Arrow, Ice_Arrows = Ice_Arrow,
		Light_Arrow, Light_Arrows = Light_Arrow, Lights = Light_Arrow,
		Dins_Fire, Dins = Dins_Fire,
		Farores_Wind, Farores = Farores_Wind,
		Nayrus_Love, Nayrus = Nayrus_Love,

		Bottles,
		Ruto_Letter,
		Bottle_With_Big_Poe, Big_Poe = Bottle_With_Big_Poe,
		Bottle_With_Fish, Fish = Bottle_With_Fish,
		Bottle,
		Bottle_With_Blue_Fire, Blue_Fire = Bottle_With_Blue_Fire,
		Bottle_With_Bugs, Bugs = Bottle_With_Bugs, Bugs_Bottle = Bottle_With_Bugs,
		Bottle_With_Fairy, Fairy = Bottle_With_Fairy, Bottle_With_Fairy_Spirit = Bottle_With_Fairy, Fairy_Spirit = Bottle_With_Fairy,
		Bottle_With_Green_Potion, Green_Potion = Bottle_With_Green_Potion,
		Bottle_With_Red_Potion, Red_Potion = Bottle_With_Red_Potion,
		Bottle_With_Blue_Potion, Blue_Potion = Bottle_With_Blue_Potion,

		Songs,
		Zelda_Lullaby, ZL = Zelda_Lullaby, Zeldas_Lullaby = Zelda_Lullaby,
		Epona_Song, Eponas = Epona_Song, Epona = Epona_Song,
		Saria_Song, Sarias = Saria_Song, Sarias_Song = Saria_Song,
		Sun_Song, Suns = Sun_Song,
		Song_Of_Time, SoT = Song_Of_Time, Time = Song_Of_Time,
		Song_Of_Storms, SoS = Song_Of_Storms, Storms = Song_Of_Storms,

		Warp_Songs,
		Minute_Of_Forest, Minute = Minute_Of_Forest,
		Bolero_Of_Fire, Bolero = Bolero_Of_Fire,
		Serenade_Of_Water, Serenade = Serenade_Of_Water,
		Requiem_Of_Spirit, Requiem = Requiem_Of_Spirit,
		Nocturne_Of_Shadow, Nocturne = Nocturne_Of_Shadow,
		Prelude_Of_Light, Prelude = Prelude_Of_Light,

		Child_Trade,
		SOLD_OUT,
		Weird_Egg,
		Cucco,
		Zeldas_Letter,
		Keaton_Mask,
		Skull_Mask,
		Spooky_Mask,
		Bunny_Mask,
		Goron_Mask,
		Zora_Mask,
		Gerudo_Mask,
		Mask_Of_Truth,

		Adult_Trade,
		Pocket_Egg,
		Pocket_Cucco,
		Cojiro,
		Odd_Mushroom,
		Odd_Medicine,
		Poachers_Saw, Saw = Poachers_Saw,
		Broken_Sword,
		Prescription,
		Eyeball_Frog,
		Eyedrops,
		Claim_Check,

		Collectables,
		Gold_Skull, Gold_Skulls = Gold_Skull, Skulls = Gold_Skull, GS_Tokens = Gold_Skull, Gold_Skulltula_Token = Gold_Skull,
		Piece_Of_Heart, PoH = Piece_Of_Heart,
		Winners_Heart_Piece,
		Heart_Container,
		Recovery_Heart,
		Ice_Trap,
		Triforce_Piece,
		Small_Key,
		Boss_Key,

		Dungeon_Rewards,
		Deku, Kokiri_Emerald = Deku, Emerald = Deku,
		DC, Goron_Ruby = DC, Ruby = DC,
		Jabu, Zora_Sapphire = Jabu, Sapphire = Jabu,
		Forest, Forest_Medallion = Forest,
		Fire, Fire_Medallion = Fire,
		Water, Water_Medallion = Water,
		Shadow, Shadow_Medallion = Shadow,
		Spirit, Spirit_Medallion = Spirit,
		Light, Light_Medallion = Light,
		LAST
	};

	enum HashID
	{
		HASH_NA,
		HASH_Deku_Stick,
		HASH_Deku_Nut,
		HASH_Bow,
		HASH_Slingshot,
		HASH_Fairy_Ocarina,
		HASH_Bombchu,
		HASH_Longshot,
		HASH_Boomerang,
		HASH_Lens_of_Truth,
		HASH_Beans,
		HASH_Megaton_Hammer,
		HASH_Bottled_Fish,
		HASH_Bottled_Milk,
		HASH_Mask_of_Truth,
		HASH_SOLD_OUT,
		HASH_Cucco,
		HASH_Mushroom,
		HASH_Saw,
		HASH_Frog,
		HASH_Master_Sword,
		HASH_Mirror_Shield,
		HASH_Kokiri_Tunic,
		HASH_Hover_Boots,
		HASH_Silver_Gauntlets,
		HASH_Gold_Scale,
		HASH_Stone_of_Agony,
		HASH_Skull_Token,
		HASH_Heart_Container,
		HASH_Boss_Key,
		HASH_Compass,
		HASH_Map,
		HASH_Big_Magic,
	};

	enum GossipStoneID
	{
		GStone_NA,
		GStone_Colossus_Spirit_Temple,
		GStone_DMC_Bombable_Wall,
		GStone_DMCUpper_Grotto,
		GStone_DMT_Biggoron,
		GStone_DMT_Storms_Grotto,
		GStone_Dodongos_Cavern_Bombable_Wall,
		GStone_GC_Maze,
		GStone_GC_Medigoron,
		GStone_GV_Waterfall,
		GStone_Graveyard_Shadow_Temple,
		GStone_HC_Malon,
		GStone_HC_Rock_Wall,
		GStone_HC_Storms_Grotto,
		GStone_HF_Cow_Grotto,
		GStone_HF_Near_Market_Grotto,
		GStone_HF_Open_Grotto,
		GStone_HF_Southeast_Grotto,
		GStone_KF_Deku_Tree_Left,
		GStone_KF_Deku_Tree_Right,
		GStone_KF_Outside_Storms,
		GStone_KF_Storms_Grotto,
		GStone_Kak_Open_Grotto,
		GStone_LH_Lab,
		GStone_LH_Southeast_Corner,
		GStone_LH_Southwest_Corner,
		GStone_LW_Bridge,
		GStone_LW_Near_Shortcuts_Grotto,
		GStone_SFM_Maze_Lower,
		GStone_SFM_Maze_Upper,
		GStone_SFM_Saria,
		GStone_ToT_Left,
		GStone_ToT_Left_Center,
		GStone_ToT_Right_Center,
		GStone_ToT_Right,
		GStone_ZD_Mweep,
		GStone_ZF_Fairy,
		GStone_ZF_Jabu,
		GStone_ZR_Near_Domain,
		GStone_ZR_Near_Grottos,
		GStone_ZR_Open_Grotto
	};

	enum DungeonID
	{
		Deku_Tree,
		Dodongo_Caverns,
		Jabu_Jabu_Belly,
		Forest_Temple,
		Fire_Temple,
		Water_Temple,
		Shadow_Temple,
		Spirit_Temple,
		Bottom_Of_the_Well, BotW = Bottom_Of_the_Well,
		Gerudo_Training_Grounds, GTG = Gerudo_Training_Grounds,
		Ice_Caverns,
		Ganons_Castle
	};


}
#endif __Defines__
